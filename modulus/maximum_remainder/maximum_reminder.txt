Source - "Chef Modulo Game" problem from January Long Challenge 2019 CodeChef



Problem:

Find out, for 'N', the maximum remainder possible to be obtained 
when divided by an appropriate lesser number than 'N'.



Solution:

For a number 'x' less than 'N',
the maximum remainder that can be obtained is when,

	x = ceil((N + 1) / 2)								// Ceil function of ((N + 1) / 2)
	
	and,
	
	M = floor((N - 1) / 2)								// Floor function of ((N - 1) / 2)
	
Explanation:

For any number 'x' more than the value of (N / 2), the remainder obtained 
by dividing N by x would be (N - x).

Hence, the value of x should be as much close to (N / 2) value as possible
to maximise the remainder, so the ceil value of ((N + 1) / 2) is the maximum 
possible value for x, as x equalling (N / 2) gives remainder as 0 when N is even,
hence ((N + 1)/2) is the closest value to (N / 2) for maximising the remainder.

Eventually, when value of x is ceil((N + 1) / 2) the remainder obtained is,
floor((N - 1) / 2), because, the maximum remainder possible to get is a lesser 
and closest value to (N / 2), which will be the half of the next lesser number to N,
hence floor((N - 1) / 2).




